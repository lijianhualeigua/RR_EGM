/*OOP can facilite the use of RobotRaconteur*/
#ifndef EGM_h
#define EGM_h

#ifdef __linux__ 
#include "ros/ros.h"
#include <ncurses.h>  // sudo apt-get install ncurses-dev
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>  
#include <unistd.h> 
#elif _WIN32
#ifndef _WIN32_WINNT
#define _WIN32_WINNT 0x0603  /* Windows 8.1. */
#endif
#include "stdafx.h"
#include <WinSock2.h>
#include <conio.h>
#pragma comment(lib, "Ws2_32.lib")      // link socket lib
#pragma comment(lib, "libprotobufd.lib") // link protobuf lib
#else
#endif

#include <iostream>
#include <string>
#include <fstream>
#include "egm.pb.h" // generated by Google protoc.exe

using namespace abb::egm;

class EGM {
public:
    static unsigned int sequenceNumber;
    const double rad_deg = 180 / 3.1415926;
    char protoMessage[1400];
    std::string messageBuffer;
    double joints[6];
    bool joint_cmd;

    struct {
        double cart[3];
        double orient[3];
    } cart_pose;

    void CreateSensorMessage(EgmSensor* pSensorMessage, bool &joint_cmd);
    void DisplayRobotMessage(EgmRobot *pRobotMessage);
    void UDP_Com(int portNumber);
};
#endif